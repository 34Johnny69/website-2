# 2015 August 25
# https://docpad.org/docs/deploy

sudo: false
language: node_js
node_js:
  - "6"     # lts
cache:
  directories:
    - $HOME/.npm  # http://stackoverflow.com/q/42521884/130638

install: |
  # Ensure NPM is latest
  # https://github.com/balupton/awesome-travis#ensure-npm-is-latest
  export CURRENT_NPM_VERSION="$(npm --version)" || exit -1
  export LATEST_NPM_VERSION="$(npm view npm version)" || exit -1
  if test "$CURRENT_NPM_VERSION" != "$LATEST_NPM_VERSION"; then
    echo "running an old npm version $CURRENT_NPM_VERSION, upgrading npm to $LATEST_NPM_VERSION..."
    npm install npm --global --cache-min=Infinity || exit -1
    echo "...npm upgrade complete"
  fi

install: |
  # Ensure dependencies install with a LTS node version
  # https://github.com/balupton/awesome-travis#use-lts-node-version-for-preparation
  export CURRENT_NODE_VERSION="$(node --version)" || exit -1
  export LTS_NODE_VERSIONS="$(nvm ls-remote --lts)" || exit -1
  if echo "$LTS_NODE_VERSIONS" | grep "$CURRENT_NODE_VERSION"; then
    echo "running on a LTS node version, completing setup..."
    npm run our:setup || exit -1
    echo "...setup complete with current LTS version"
  else
    echo "running on a non-LTS node version, completing setup on a LTS node version..."
    nvm install --lts
    export LTS_NODE_INSTALLED_VERSION="$(node --version)" || exit -1
    npm run our:setup || exit -1
    nvm use "$TRAVIS_NODE_VERSION" || exit -1
    echo "...setup complete with LTS"
  fi

before_script: |
  # Ensure compilation and linting occur on a LTS node version
  # https://github.com/balupton/awesome-travis#use-lts-node-version-for-preparation
  if test "$LTS_NODE_INSTALLED_VERSION"; then
    echo "running on a non-LTS node version, compiling with LTS, skipping linting..."
    nvm use "$LTS_NODE_INSTALLED_VERSION" || exit -1
    npm run our:compile || exit -1
    nvm use "$TRAVIS_NODE_VERSION" || exit -1
    echo "...compiled"
  else
    echo "running on a LTS node version, compiling and linting..."
    npm run our:compile && npm run our:verify || exit -1
    echo "...compiled and linted"
  fi

after_success: |
  # Custom Deployment
  # https://github.com/balupton/awesome-travis#npm-script-deployment
  if ([ "$TRAVIS_BRANCH" == "$DEPLOY_BRANCH" ] &&
      [ -z "$TRAVIS_TAG" ] &&
      [ "$TRAVIS_PULL_REQUEST" == "false" ]); then
    echo "deploying..."
    npm run deploy || exit -1
    echo "...deployed"
  else
    echo "skipped deploy"
  fi


# ========================================
# Custom Configuration

env:
  global:
  # Custom Deploy
  # travis encrypt "SURGE_LOGIN=$SURGE_LOGIN" --add env.global
  # travis encrypt "SURGE_TOKEN=$SURGE_TOKEN" --add env.global
  - DEPLOY_BRANCH='master'  # this is the branch that you want deployed
  - secure: fHJTisHc/SEKQLzWOgD6oH1Sm6RJdEjg3ojF9WVVQqxcFji1i8HooaHfseC0De1M+PI8Z9i0/d9jXQhXUME/8VYFkxdcAMUNo1zAzEC4vy45rROXr9GAZBkSeAq+7v8rKaL2wXnoOvifdM9BQPe+NmqByQMon3IPYcfSdv/WF34=
  - secure: d+rdemGCdOteVu7b6erd3pbaTYz1NFNYooY2s+OcA1rCJppM12vUTa57j2emVbkbV4D6Zc29mwRfn6Q5ksX+0Ny6wyNgMZLVDE5t2JVPDuMe6T3OPTjZxRdU8XDKroRKWZ0GM9A75gtAoVLg9sLr9J4VvjFYNhvbBktFz5CqSCY=

# https://github.com/balupton/awesome-travis#slack
# https://github.com/balupton/awesome-travis#email
notifications:
  email:
    recipients:
      secure: LQkrgsK0K6j92Bg3lfqs1/JRktwuF5uQqYc5DU4UecrKI7uEEFI2H2uNv8Gv0GUFYGYXPKXNdtjregaJVMzT5PNTJAYKqE9XXqs8IJ/IGlfAJDYeypA2E/g70ItMW0RkHYyUxc6RuSRRiLN+JMn3Qu5TgGt7qo3CL/3knKMSJYw=
  slack:
    secure: bXgRdWqiZQD5SedL5Z3qXKvs/YtJ6QZOPWI5Iq3ki5MNY9JVOfsOFmdD7WPmDUM4SnXTv+RrWEhRfRnaRRPDdJQU0dcKP58NTjSRGJC8HL/byHtXY79HISrufvoAQ6zAXJGBZhNRMDNxFacU2870rvSq+z7XA9NmdrM19hj/xI4=
